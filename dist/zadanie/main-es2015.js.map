{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/product/product.component.html","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/product/product.component.css","webpack:///./src/app/product/product.component.ts","webpack:///./src/app/rest.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-product></app-product>\\n\\n\\n\"","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table [dataSource]=\\\"dataSource\\\">\\n\\n    <!-- Position Column -->\\n    <ng-container matColumnDef=\\\"followers\\\">\\n      <th mat-header-cell *matHeaderCellDef> Name </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element?.followers}} </td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef> Npictureame </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element?.name}} </td>\\n    </ng-container>\\n\\n    <!-- Weight Column -->\\n    <ng-container matColumnDef=\\\"picture\\\">\\n      <th mat-header-cell *matHeaderCellDef> Weight </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element?.picture}} </td>\\n    </ng-container>\\n\\n    <!-- Symbol Column -->\\n    <ng-container matColumnDef=\\\"repositories\\\">\\n      <th mat-header-cell *matHeaderCellDef> Followers </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element?.repositories}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"headElements\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: headElements;\\\"></tr>\\n  </table>\\n\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'zadanie';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { MatPaginatorModule, MatSortModule, MatTableModule } from '@angular/material';\nimport { MatCardModule } from '@angular/material/card';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { ProductComponent } from './product/product.component';\n\nconst appRoutes: Routes = [\n\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductComponent\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    BrowserModule,\n    MatGridListModule,\n    MatCardModule,\n    MatTableModule,\n    HttpClientModule,\n    MatPaginatorModule,\n    BrowserAnimationsModule,\n    MatSortModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".bodyd tr:hover {\\n  color: #607D8B;\\n  background-color: #DDD;\\n  left: .1em;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\n.bodyd {\\n  width: 100%;\\n}\\n\\ntable, th, td {\\n  border: 1px solid black;\\n  border-collapse: collapse;\\n}\\n\\nth, td {\\n  padding: 5px;\\n}\\n\\nth {\\n  text-align: left;\\n}\\n\\nimg {\\n  height: 60px;\\n  width: 60px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZHVjdC9wcm9kdWN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0VBQ2Qsc0JBQXNCO0VBQ3RCLFVBQVU7QUFDWjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHVCQUF1QjtFQUN2Qix5QkFBeUI7QUFDM0I7O0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7O0FBQ0E7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvcHJvZHVjdC9wcm9kdWN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYm9keWQgdHI6aG92ZXIge1xuICBjb2xvcjogIzYwN0Q4QjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0RERDtcbiAgbGVmdDogLjFlbTtcbn1cblxudGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmJvZHlkIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbnRhYmxlLCB0aCwgdGQge1xuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbn1cbnRoLCB0ZCB7XG4gIHBhZGRpbmc6IDVweDtcbn1cbnRoIHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuaW1nIHtcbiAgaGVpZ2h0OiA2MHB4O1xuICB3aWR0aDogNjBweDtcbn1cbiJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { RestService } from '../rest.service';\nimport {Sort} from '@angular/material/sort';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient, HttpResponse, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { MatTableModule } from '@angular/material';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {BrowserAnimationsModule, NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSort} from '@angular/material/sort';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nexport interface PeriodicElement {\n  name: any;\n  picture: any;\n  followers: any;\n  repositories: any;\n}\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n\n  constructor(public rest: RestService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private http: HttpClient) {\n    this.getProducts();\n    this.dataSource.paginator = this.paginator;\n  }\n  dataSource: any = [];\n  headElements = ['picture', 'name', 'followers', 'repositories'];\n  urls: string;\n  sortedData: PeriodicElement[];\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  static compare(a: number | string, b: number | string, isAsc: boolean) {\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n  }\n\n  ngOnInit() {\n  }\n\n  getProducts() {\n    const dataSources: PeriodicElement[] = new Array(30);\n    const f: any[] = [];\n    /*\n    this.rest.getProducts().subscribe((data: {}) => {\n      for (const prop in data) {\n        if (data.hasOwnProperty(prop)) {\n          this.rest.getFollowers(data[prop].url).subscribe((data2: any) => {\n            dataSources[prop] = {name : data[prop].login, picture : data[prop].avatar_url,\n              followers : data2.followers, repositories : data2.public_repos};\n            // this.dataSource = dataSources;\n            // this.sortedData = dataSources.slice();\n          });\n        }\n      }\n      // this.dataSource = new MatTableDataSource<PeriodicElement>(dataSources);\n      this.dataSource = dataSources;\n    })\n     */\n\n  }\n\n  // getPartners(): Observable<PeriodicElement[]> {\n  //   return this.http.get('https://api.github.com/users').pipe(map((rsp) => {\n  //     return rsp.results;\n  //   }));\n  // }\n\n\n  sortData(sort: Sort) {\n    const data = this.dataSource.slice();\n    if (!sort.active || sort.direction === '') {\n      this.sortedData = data;\n      return;\n    }\n\n    this.sortedData = data.sort((a, b) => {\n      const isAsc = sort.direction === 'asc';\n      switch (sort.active) {\n        case 'followers': return ProductComponent.compare(a.followers, b.followers, isAsc);\n        case 'repositories': return ProductComponent.compare(a.repositories, b.repositories, isAsc);\n        default: return 0;\n      }\n    });\n  }\n\n  btnClick(data: any) {\n    this.urls = 'https://github.com/' + data;\n    window.open(this.urls,  '_blank');\n  }\n}\n","/* tslint:disable:prefer-const */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\n\nconst endpoint = 'http://localhost:3000/api/v1/';\nconst configUrl = 'https://api.github.com/users';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class RestService {\n\n  constructor(private http: HttpClient) { }\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n\n  getProducts() {\n    return this.http.get(configUrl).pipe();\n  }\n\n  getFollowers(followersUrl: string) {\n    return this.http.get(followersUrl);\n  }\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      console.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}